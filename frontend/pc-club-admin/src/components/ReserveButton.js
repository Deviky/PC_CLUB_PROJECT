import React, { useState } from "react";
import axios from "axios";
import { useAuth } from "../auth/AuthContext"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
import { toast } from "react-toastify"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º toast –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
import '../styles/ReserveButton.css';

const ReserveButton = ({ pcId, selectedService, dateFrom, duration, clientId, useBonus }) => {
  const [loading, setLoading] = useState(false);

  const { token } = useAuth(); // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

  // –õ–æ–≥–∏—Ä—É–µ–º clientId, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–Ω –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ
  console.log("clientId –≤ ReserveButton:", clientId);

  const handleReservePC = async () => {
    if (!token) {
      toast.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å."); // –ò—Å–ø–æ–ª—å–∑—É–µ–º toast –¥–ª—è –æ—à–∏–±–∫–∏
      return;
    }

    setLoading(true);

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const hours = Number(duration);
    const startDttm = new Date(dateFrom); // –ù–∞—á–∞–ª–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    const endDttm = new Date(dateFrom);
    endDttm.setHours(endDttm.getHours() + hours); // –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log("start –∏ end time:", startDttm, endDttm);

    const orderRequest = {
      clientId: clientId,  // –ò—Å–ø–æ–ª—å–∑—É–µ–º clientId –∏–∑ –ø—Ä–æ–ø—Å–æ–≤
      serviceId: selectedService.id,
      pcId: pcId,
      totalServiceCount: duration, // –ü—Ä–∏–º–µ—Ä: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤
      startDttm: startDttm,
      endDttm: endDttm,
      useBonus: useBonus,
    };

    try {
      // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
      const response = await axios.post(
        "http://localhost:8966/order/create",
        orderRequest,
        {
          headers: {
            Authorization: `Bearer ${token}`, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            "Content-Type": "application/json",
          },
        }
      );

      if (response.data.message) {
        toast.success(response.data.message); // –£—Å–ø–µ—à–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      }
    } catch (error) {
      if (error.response && error.response.data && error.response.data.message) {
        toast.error(error.response.data.message); // –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      } else {
        toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: " + error.message); // –û–±—â–∞—è –æ—à–∏–±–∫–∞
      }
    }

    setLoading(false);
  };

  return (
    <button
  onClick={handleReservePC}
  className="reserve-btn__button"
  disabled={loading}
>
  {loading ? "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é..." : "üíª –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ü–ö"}
</button>
  );
};

export default ReserveButton;
